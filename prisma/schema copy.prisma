generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model Users {
  id               String            @id @default(uuid())
  email            String            @unique
  password         String
  firstName        String?           @map("first_name")
  lastName         String?           @map("last_name")
  mobile           String?
  address          String?
  role             Role              @default(USER)
  user_collections UserCollections[]
  orders           Orders[]
  Cart             Cart[]

  @@map("users")
}

enum Status {
  successfully
  failed
  pending
}

model Orders {
  id          String       @id @default(uuid())
  amount      Int
  totalPrice  Int          @map("total_price")
  trackNumber String?      @map("track_number")
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  paymentPic  String?
  payment     Status       @default(pending)
  users       Users        @relation(fields: [usersId], references: [id])
  usersId     String       @map("user_id")
  orderItems  OrderItems[]

  @@map("orders")
}

model OrderItems {
  id        String   @id @default(uuid())
  amount    Int
  price     Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  order     Orders   @relation(fields: [ordersId], references: [id])
  ordersId  String   @map("order_id")

  @@map("order_items")
}

model Products {
  id              Int               @id @default(autoincrement())
  bggId           String            @map("bgg_id")
  title           String
  yearpublished   String?
  description     String?           @db.VarChar(10000)
  image           String
  price           Int?
  stock           Int?              @default(0)
  discount        Float?
  UserCollections UserCollections[]
  Cart            Cart[]

  @@map("products")
}

model UserCollections {
  id         Int      @id @default(autoincrement())
  userId     Users    @relation(fields: [usersId], references: [id])
  productId  Products @relation(fields: [productsId], references: [id])
  usersId    String   @map("user_id")
  productsId Int

  @@map("user_collections")
}

model Cart {
  id         Int      @id @default(autoincrement())
  userId     Users    @relation(fields: [usersId], references: [id])
  productId  Products @relation(fields: [productsId], references: [id])
  usersId    String   @map("user_id")
  productsId Int

  @@map("cart")
}
